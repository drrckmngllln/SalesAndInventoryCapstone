<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAbhUAAAJNU0Z0AUkBTAIBAQcB
        AAFgAQABYAEAARQBAAEUAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABUAMAASgDAAEBAQABIAYAATIW
        AANGAX8DawHgA8wB/CT/A8wB/ANqAeIDTQGRAwkBCxQAAwwBEANVAa8DnAH1LP8DYgHXAykBPqgAAzEB
        TgPnAf44/wM+AWoUAAMpAT0D5wH+NP8DXQHKAwIBAwgAAwcBCQM1AVUDVAGmA1UBrQNVAa0DVQGtA1UB
        rQNVAa0DVQGtA0sBigMFAQZwAANlAds8/wNZAbsUAAM2AVk4/wNjAdUDBwEJCAADSwGKA94B/SD/AxMB
        GXAAA7gB+Tz/A14BzRQAAzYBWTj/A2MB1gMIAQoIAANiAdkDkgHxAz0BZwMuAUcDLgFHAy4BRwMuAUcD
        LgFHAy4BRwMeASsDBQEGAx0BKQMFAQZoAANzAeo8/wNcAcQUAAM2AVkI/wNfAckDTwGZA08BmQNTAacD
        zAH8HP8DYwHWAwgBCggAA3cB6gNmAd0DDQERHAADSgGJBP8DWQG5AwQBBWQAA1cBtDz/A1IBpBQAAzYB
        WQj/A0QBeAMzAVIDMwFSAzUBVgNxAeYc/wNjAdYDCAEKCAADdwHqA2YB3QMNAREcAANXAbUI/wNdAccD
        FwEfYAADOAFcPP8DQQFwFAADNgFZOP8DYwHWAwgBCggAA3cB6gNmAd0DDQERAwIBAwM7AWMDVQGsA1UB
        rQNVAa0DVQGtA1UBrQN2AegDzgH8A24B4wPpAf4DuQH4AyoBP1wAAwYBBwNyAeg4/wMjATMUAAM2AVkI
        /wNiAdQDVQGtA1UBrQNVAa0DVQGtA1UBrQNVAa0DVQGtA1UBrQNdAcwI/wNjAdYDCAEKCAADdwHqA2YB
        3QMNAREDGwElA+kB/hj/A3UB5wMeASsDUAGaBP8DiQHwA0ABbwQCWAADSwGKEP8DjgHxA1kBuwNUAaYD
        WgG6A5UB8wz/A+cB/gNRAZ8EAhQAAzYBWQj/AzYBWQMlATYDJQE2AyUBNgMlATYDJQE2AyUBNgMlATYD
        JQE2AzoBYQj/A2MB1gMIAQoIAAN3AeoDZgHdAw0BEQMfASwE/wNnAd4DLgFHAy4BRwMuAUcDLgFHAy4B
        RwMaASQEAAMGAQgDSAGDA5kB8wO7AfkDSAGEAwcBCVgAA0oBiQPMAfwE/wNiAdcDEwEZDAADBAEFA1oB
        vQj/A08BmRwAAzYBWTj/A2MB1gMIAQoIAAN3AeoDZgHdAw0BEQMfASwE/wNhAdEkAAMzAVII/wM7AWNY
        AAQBAxYBHQMhAS8DBgEIA0IBcgNXAbIDWgG/A1UBqgM6AWADCgENAyMBMgMXAR8EARwAAzYBWQj/A2UB
        3wNaAcIDWgHCA1oBwgNaAcIDWgHCA1oBwgNaAcIDWgHCA2EB2Qj/A2MB1gMIAQoIAAN3AeoDZgHdAw0B
        EQMfASwE/wNhAdEgAAMGAQcDUwGlBP8DnAH0AycBOWAAAxMBGQNiAdQU/wNRAZwDBgEIJAADNgFZCP8D
        JwE5AxQBGwMUARsDFAEbAxQBGwMUARsDFAEbAxQBGwMUARsDLgFICP8DYwHWAwgBCggAA3cB6gNmAd0D
        DQERAx8BLAT/A34B7ANNAZIDTQGSA00BkgNNAZIDTQGSAzkBXwMEAQUDGQEiA2IB2QT/A2sB4QMkATVk
        AANUAaYY/wPnAf4DTAGOJAADNgFZCP8DjgHxA3IB5wNyAecDcgHnA3IB5wNyAecDcgHnA3IB5wNyAecD
        ggHvCP8DYwHWAwgBCggAA3cB6gNmAd0DDQQRARYD3gH9GP8DlQHyAzoBYQNrAeEE/wNcAcQDFgEeZAAD
        GgEjA8wB/Bz/A2oB4gMRARYgAAM2AVkk/wOPAfIDYgHXA2MB1gNjAdYDYwHWA1gBswMGAQgIAAN3AeoD
        ZgHdAw0BEQQAAx4BKgM7AWMDPAFmAzwBZgM8AWYDPAFmA2QB1APpAf4D6QH+A80B+wNVAaoDEQEWaAAD
        OwFjIP8DlgH0Ax0BKCAAAzYBWSD/A3sB6wMMARAgAAN3AeoDZgHdAw0BERwAA1gBswj/A0kBhnAAAzsB
        YiD/A5UB8wMcAScgAAM2AVkg/wNVAa0DFQEcA1oBwgNhAc8DYQHPA1oBwgMbASYMAAN2AegDZwHfAw8B
        ExwAAysBQgNTAacDNQFWBAJwAAMbASUDwQH6HP8DagHiAxEBFiAAAzYBWSD/A1QBqQMaASMDggHvBP8D
        nAH1AzMBUhAAA18BywPOAfwDVQGtA00BkgNNAZIDTQGSA00BkgNNAZIDTQGSAz4BagMEAQWAAANSAaQc
        /wNKAYkEAiAAAzUBViD/A1QBqQMaASMDggHvA3sB6wMkATQEAhAAAy4BRgOyAfcg/wMWAR2AAAMWAR4D
        XAHDA9sB/RD/A1EBnwMCAQMkAAMfASwDlgH0HP8DVAGpAxoBIwNfAdMDLQFEHAADEwEZAzkBXQM8AWYD
        PAFmAzwBZgM8AWYDPAFmAzwBZgMsAUOMAAM4AVsDYwHVA6EB9gNcAcMDJwE5LAAEAQM5AV0DcgHoGP8D
        VAGpAwoBDQMLAQ64AANKAYkDoQH2FP8D5wH+A2UB3wMeASsEAANRAZ8DygH7FP8D5wH+A1wBw3AAAzIB
        TwNnAdwDnAH1A0wBjwQCbAAD2wH9IP8DPAFlBAADZwHcHP8D5wH+EAADCAEKA04BmAOhAfYk/wOWAfQD
        TAGPAwYBCBAABAEDLwFJA0wBjgM8AWQDOgFgA48B8gz/A1MBpwM1AVUDRgF9A0MBdQMOARJcACT/AzwB
        ZgQAA2UB3SD/EAADMQFNMP8DuAH5AyEBMBAAAysBQQO1Afgs/wNMAZBcACT/AzwBZgQAA2UB3SD/EAAD
        OQFfCP8DWgG3A4AB7gNsAeMDVQGtBP8DWgG3A4AB7gNsAeMDVQGtCP8DKwFCEAADTAGOMP8DXwHQJAAD
        GAEgAzsBYgM8AWYDPAFmAzwBZgM8AWYDPAFkAx0BKRgAJP8DPAFmBAADZQHdIP8QAAM5AV8I/wMLAQ4D
        XAG+A1IBoAQAA7UB+AMLAQ4DXAG+A1IBoQQAA6wB9wT/AysBQgwABAIDXQHHHP8DnAH1A10BxQO1AfgI
        /wPBAfoDBwEJHAADBwEJA2YB3gL9Av8C/QL/Av0C/wL9Av8C/QL/Av0C/wNyAegIAANyAecDXwHSAxgB
        IAQAJP8DPAFmBAADXQHFHP8DcQHmEAADOQFfCP8DWQG2A38B7QNSAaAEAAO1AfgDCwEOA1wBvgNSAaEE
        AAOsAfcE/wMrAUIIAAMwAUsDWwHAA8oB+wj/A0wBjwO4AfkI/wNjAdoDFwEfAyUBNwMWAR4DXAHDCP8D
        awHgA0YBfwMJAQsEAAMuAUYDTQGSAxIBFwMhAS8DcgHoAv0C/wL9Av8C/QL/Av0C/wL9Av8C/QL/Av0C
        /wL9Av8IAAL9Av8C/QL/A10BzAQAJP8DPAFmBAADGwElA0cBgQNJAYgDSQGIA0kBiANJAYgDSQGIA0kB
        hgMnAToQAAM5AV8Q/wNTAaUDBwEJA7gB+QNAAW4DZwHcA1IBoQQAA6wB9wT/AysBQgQAAw8BFAOcAfUQ
        /wMjATIDMwFQA5UB8wT/Az4BagM+AWoD2wH9Ay0BRQM/AWwQ/wNNAZEEAANPAZkC/QL/AyMBMwM8AWUC
        /QL/Av0C/wL9Av8C/QL/A1UBrANmAd4C/QL/Av0C/wL9Av8DIwEzAyMBMwL9Av8C/QL/Av0C/wQAJP8D
        PAFmOAADEwEaAyUENwFaA1cBtQPMAfwDjgHxA2MB1Qz/A1IBoQQAA6wB9wT/AysBQgQAAyoBPxT/A2kB
        4QMdASkDMwFQA7gB+QNRAZ4DHAEnA1EBnAMWAR0DSwGLEP8DVwGyBAADTwGZAv0C/wMjATMDPAFmAv0C
        /wL9Av8C/QL/Av0C/wNPAZkDEwEaA4AB7gL9Av8C/QL/Av0C/wL9Av8C/QL/Av0C/wL9Av8EACT/AzwB
        ZgQAAzwBZANdAccDXQHMA10BzANdAcwDXQHMA10BzANfAcsDRwGCDAADDAEQAzABSwM8AWQDMQFOAxIB
        GAMyAU8DZgHeEP8DVgGrAw4BEgPBAfoE/wMrAUIEAAQCA2UB3xT/A2kB4QMgAS4DNwFaA8EB+gNCAXQD
        KgE/A0EBcQOWAfQQ/wM+AWoEAANPAZkC/QL/Av0C/wL9Av8C/QL/Av0C/wNiAdcDCQELCAADVQGvAv0C
        /wL9Av8C/QL/Av0C/wL9Av8C/QL/Av0C/wQAJP8DPAFmBAADYQHZHP8DwQH6CAADFgEdA3EB5gz/A3sB
        7AMbASUDKQE+IP8DKwFCCAADTAGOGP8DnAH1AxsBJQMpAT0DwQH6GP8DfwHtAwMBBAQAA08BmQL9Av8C
        /QL/Av0C/wL9Av8C/QL/A5YB9AMeASoDPAFmAv0C/wL9Av8C/QL/Av0C/wL9Av8C/QL/Av0C/wL9Av8C
        /QL/BAADWgHCIP8DKwFBBAADZQHdIP8EAAMMARADYwHWFP8DagHiAxYBHgNVAawc/wMrAUIIAANVAa0Q
        /wPMAfwDYQHPA2cB3ANjAdoDGwElAzcBWgO4AfkU/wO1AfgDHAEnBAADTwGZAv0C/wMjATMDPAFmAv0C
        /wL9Av8C/QL/A2EBzwNEAXsC/QL/Av0C/wL9Av8C/QL/Av0C/wL9Av8C/QL/Av0C/wL9Av8EAAMFAQYD
        QwF2A0kBiANJAYgDSQGIA0kBiANJAYgDSQGGAzABSggAA2UB3SD/BAADOgFhDP8DrAH3A3AB5QNqAeQD
        agHkAzwBZgMeASsc/wMrAUIEAAMMAQ8DnAH1EP8DOwFiAw8BEwMJAQsDTgGVA5wB9QMgAS4DMwFQA5UB
        8xT/A0wBkAQAA00BkgLZAdsB/QMiATEDPAFmAv0C/wL9Av8C/QL/Av0C/wL9Av8C/QL/Av0C/wL9Av8C
        /QL/CAAC/QL/Av0C/wPKAfswAANlAd0g/wQAA0oBiQj/A5UB8wMjATIDEwEZAxIBGAMSARgDCgENBAID
        ygH7GP8DKwFCBAADLQFEEP8DygH7AxIBGANlAd0DVgGrAyABLgT/A2kB4QMdASkDMwFQA7gB+RD/A1cB
        tAQAAxIBGAMiATEDBgEIAzkBXQL9Av8C/QL/Av0C/wL9Av8C/QL/Av0C/wL9Av8C/QL/A3sB7AgAAv0C
        /wL9Av8DVQGvBAADLQFEA1wBvgNdAcwDXQHMA10BzANdAcwDXQHMA18BywNRAZwDDgESBAADZQHdIP8E
        AANCAXII/wNiAdQEAANMAY4DWAG4A1gBuAM3AVoDEwEZBP8DnAH1Az0BaAMJAQsUAAMEAQUDXAHDDP8D
        5wH+AxQBGwNVAa0DRgF+AycBOQj/A2kB4QMjATIDTAGODP8DcwHqAzYBWRAAAw4BEgNKAYkDTwGZA08B
        mQN7AesC/QL/A08BmQNPAZkDTgGWAykBPggAA0sBiwNGAX4DDwETBAADlgH0IP8DOQFfBAADZQHdIP8E
        AAMWAR0D2wH9BP8DXwHTBAADXQHFCP8DIQEvA0cBggT/A2MB1QMHAQkDXwHQCP8DlQHzAxwBJwwAAzoB
        YAOcAfUI/wNLAYwEAAMGAQcDWgG/HP8DWAGzAwsBDiQAA10BzAL9Av8oACT/AzwBZgQAA2UB3SD/CAAD
        MwFRA4UB8ANfAdMEAANdAcUDlgH0AzsBYgMcAScDrAH3BP8DXwHQAwMBBAOWAfQE/wPBAfoDPQFnAwIB
        AwwABAEDVwGyDP8DgAHuA5wB9Rz/A3sB6wMDAQQcAANyAecC/QL/Av0C/wL9Av8C/QL/Av0C/wL9Av8C
        vwHBAfoDIAEuGAAk/wM8AWYEAANlAd0g/wwAAxoBIwNDAXYEAANCAXIDIAEtAxMBGgNaAb0I/wNfAdAD
        AwEEA5YB9AT/A0QBeBgAA0MBdjD/A1wBviAAA1EBngNdAcwDXQHMA10BzANdAcwDXQHMA10BzANaAcID
        FwEfGAAk/wM8AWYEAANlAd0g/xQABAIDGwElA0cBgANsAeMM/wNfAdADAwEEA5YB9ANLAYoDBgEHGAAD
        EQEWA2oB5Cz/AzsBY1wAA3IB6CD/AzYBWAQAA2IB1Bz/A6EB9hQAAy8BSQNNAZIDTwGZA08BmQNPAZkD
        TwGZA08BmQNGAX0EAgM5AV4kAAMRARYDKwFBAxsBJQMZASIDXAHDCP8DcwHqAzYBWQMTARoDJQE3AyMB
        MgQBXAADHgErA3IB6BT/A9sB/QNXAbEDAwEEBAADOwFjA6EB9hT/A9sB/QNLAYpwAAQCA1QBqQNyAecD
        JAE1cAABQgFNAT4HAAE+AwABKAMAAVADAAEoAwABAQEAAQEFAAHgAQEWAAP/AQABgAEAAXwBAAEDAv8B
        8AYAAXwBAAEBAYABDwHwBgABfAEAAQEBgAEPAfAGAAF8AQABAQGAAQMB8AYAAXwBAAEBAY8B4QHwBgAB
        fAEAAQEBjwHgAfAGAAF8AQABAQGAAQABcAYAAXwBAAEBAYABAAEQBAABgAEAAXwBAAEBAYABBAUAAsEB
        /AEAAQEBgQH/BQABwAEBAfwBAAEBAYEB/gUAAfABBwH8AQABAQGAAQABEAQAAfABBwH8AQABAQGAAQAB
        MAQAAeABAwH8AQABAQGIAQABcAQAAeABAwH8AQABfwGPAeEB8AQAAeABAwH8AQABAwGPAeEB8AQAAeAB
        AwH8AQABBwGAAQ8B8AQAAfABAwH8AQABBwGAAQ8B8AQAAfABBwH8AQABHwHAAR8B8AQAAfwBHwH8AQAB
        PwL/AfAFAAEgAQ8D/wEHA/8DAAEgAQ8BAAEBAeABAAF/Av8DAAEgAQ8BAAEBAeABAAF/Av8DAAEgAQ8B
        AAEBAeABAAF/AcABPwMAASABDwECAREBwAEAAT8BgAExAwABIAEPAQIBEQGAAQABCAEAATEDAAEgAQ8B
        AAERAgABCAEAAQEDAAE/Af8BAAERAgABCAEAAQEDAAEgAQ4BAAEBAgABCAEGAQEDAAEgAQwBAAEBAYAB
        AAEIAQABAQMAASABCAEAAQEBgAEAAQgBAAEBAwABYAEIAQABAQIAAQgBAAExAgAB/wHgAQgBAAEBAgAB
        CAEAATEDAAEgAQgBQAEfAgABDwEAATEDAAEgAQgBQAEBAcEBAAEfAfMB/wMAASABDAFAAQEBwAEAAT8B
        gAE/AwABIAEOAUABBwHgAQABfwGAAT8DAAEgAQ8BgAEHAeABAAF/Av8DAAEgAQ8BgAEfAfABAAF/Av8D
        AAEgAQ8D/wEPA/8CAAs=
</value>
  </data>
</root>