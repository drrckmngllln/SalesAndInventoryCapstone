<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAfhUAAAJNU0Z0AUkBTAIBAQcB
        AAFYAQABWAEAARQBAAEUAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABUAMAASgDAAEBAQABIAYAATIW
        AANGAX8DbQHgA84B/CT/A84B/ANsAeIDTQGRAwkBCxQAAwwBEANVAa8DoAH1LP8DYwHXAykBPqgAAzEB
        TgPpAf44/wM+AWoUAAMpAT0D6QH+NP8DXQHKAwIBAwgAAwcBCQM1AVUDVAGmA1UBrQNVAa0DVQGtA1UB
        rQNVAa0DVQGtA0sBigMFAQZwAANmAds8/wNZAbsUAAM2AVk4/wNjAdUDBwEJCAADSwGKA+EB/SD/AxMB
        GXAAA7sB+Tz/A14BzRQAAzYBWTj/A2QB1gMIAQoIAANkAdkDlwHxAz0BZwMuAUcDLgFHAy4BRwMuAUcD
        LgFHAy4BRwMeASsDBQEGAx0BKQMFAQZoAAN3Aeo8/wNcAcQUAAM2AVkI/wNfAckDTwGZA08BmQNTAacD
        zgH8HP8DZAHWAwgBCggAA3sB6gNpAd0DDQERHAADSgGJBP8DWQG5AwQBBWQAA1cBtDz/A1IBpBQAAzYB
        WQj/A0QBeAMzAVIDMwFSAzUBVgNzAeYc/wNkAdYDCAEKCAADewHqA2kB3QMNAREcAANXAbUI/wNdAccD
        FwEfYAADOAFcPP8DQQFwFAADNgFZOP8DZAHWAwgBCggAA3sB6gNpAd0DDQERAwIBAwM7AWMDVQGsA1UB
        rQNVAa0DVQGtA1UBrQN6AegD0AH8A3EB4wPrAf4DvQH4AyoBP1wAAwYBBwN2Aeg4/wMjATMUAAM2AVkI
        /wNkAdQDVQGtA1UBrQNVAa0DVQGtA1UBrQNVAa0DVQGtA1UBrQNeAcwI/wNkAdYDCAEKCAADewHqA2kB
        3QMNAREDGwElA+sB/hj/A3gB5wMeASsDUAGaBP8DjgHwA0ABbwQCWAADSwGKEP8DkgHxA1kBuwNUAaYD
        WgG6A5kB8wz/A+kB/gNRAZ8EAhQAAzYBWQj/AzYBWQMlATYDJQE2AyUBNgMlATYDJQE2AyUBNgMlATYD
        JQE2AzoBYQj/A2QB1gMIAQoIAAN7AeoDaQHdAw0BEQMfASwE/wNqAd4DLgFHAy4BRwMuAUcDLgFHAy4B
        RwMaASQEAAMGAQgDSAGDA54B8wPBAfkDSAGEAwcBCVgAA0oBiQPOAfwE/wNjAdcDEwEZDAADBAEFA1oB
        vQj/A08BmRwAAzYBWTj/A2QB1gMIAQoIAAN7AeoDaQHdAw0BEQMfASwE/wNhAdEkAAMzAVII/wM7AWNY
        AAQBAxYBHQMhAS8DBgEIA0IBcgNXAbIDWgG/A1UBqgM6AWADCgENAyMBMgMXAR8EARwAAzYBWQj/A2cB
        3wNaAcIDWgHCA1oBwgNaAcIDWgHCA1oBwgNaAcIDWgHCA2IB2Qj/A2QB1gMIAQoIAAN7AeoDaQHdAw0B
        EQMfASwE/wNhAdEgAAMGAQcDUwGlBP8DogH0AycBOWAAAxMBGQNkAdQU/wNRAZwDBgEIJAADNgFZCP8D
        JwE5AxQBGwMUARsDFAEbAxQBGwMUARsDFAEbAxQBGwMUARsDLgFICP8DZAHWAwgBCggAA3sB6gNpAd0D
        DQERAx8BLAT/A4MB7ANNAZIDTQGSA00BkgNNAZIDTQGSAzkBXwMEAQUDGQEiA2QB2QT/A24B4QMkATVk
        AANUAaYY/wPpAf4DTAGOJAADNgFZCP8DkgHxA3UB5wN1AecDdQHnA3UB5wN1AecDdQHnA3UB5wN1AecD
        hgHvCP8DZAHWAwgBCggAA3sB6gNpAd0DDQQRARYD4QH9GP8DmwHyAzoBYQNuAeEE/wNcAcQDFgEeZAAD
        GgEjA84B/Bz/A2wB4gMRARYgAAM2AVkk/wOVAfIDYwHXA2QB1gNkAdYDZAHWA1gBswMGAQgIAAN7AeoD
        aQHdAw0BEQQAAx4BKgM7AWMDPAFmAzwBZgM8AWYDPAFmA2UB1APrAf4D6wH+A9AB+wNVAaoDEQEWaAAD
        OwFjIP8DnAH0Ax0BKCAAAzYBWSD/A38B6wMMARAgAAN7AeoDaQHdAw0BERwAA1gBswj/A0kBhnAAAzsB
        YiD/A5kB8wMcAScgAAM2AVkg/wNVAa0DFQEcA1oBwgNhAc8DYQHPA1oBwgMbASYMAAN6AegDaQHfAw8B
        ExwAAysBQgNTAacDNQFWBAJwAAMbASUDxgH6HP8DbAHiAxEBFiAAAzYBWSD/A1QBqQMaASMDhgHvBP8D
        oAH1AzMBUhAAA18BywPQAfwDVQGtA00BkgNNAZIDTQGSA00BkgNNAZIDTQGSAz4BagMEAQWAAANSAaQc
        /wNKAYkEAiAAAzUBViD/A1QBqQMaASMDhgHvA38B6wMkATQEAhAAAy4BRgO4Afcg/wMWAR2AAAMWAR4D
        XAHDA94B/RD/A1EBnwMCAQMkAAMfASwDnAH0HP8DVAGpAxoBIwNgAdMDLQFEHAADEwEZAzkBXQM8AWYD
        PAFmAzwBZgM8AWYDPAFmAzwBZgMsAUOMAAM4AVsDYwHVA6cB9gNcAcMDJwE5LAAEAQM5AV0DdgHoGP8D
        VAGpAwoBDQMLAQ64AANKAYkDpwH2FP8D6QH+A2cB3wMeASsEAANRAZ8DzQH7FP8D6QH+A1wBw3AAAzIB
        TwNoAdwDoAH1A0wBjwQCbAAD3gH9IP8DPAFlBAADaAHcHP8D6QH+EAADCAEKA04BmAOnAfYk/wOcAfQD
        TAGPAwYBCBAABAEDLwFJA0wBjgM8AWQDOgFgA5UB8gz/A1MBpwM1AVUDRgF9A0MBdQMOARJcACT/AzwB
        ZgQAA2YB3SD/EAADMQFNMP8DuwH5AyEBMBAAAysBQQO5Afgs/wNMAZBcACT/AzwBZgQAA2YB3SD/EAAD
        OQFfCP8DWgG3A4UB7gNuAeMDVQGtBP8DWgG3A4UB7gNuAeMDVQGtCP8DKwFCEAADTAGOMP8DYQHQJAAD
        GAEgAzsBYgM8AWYDPAFmAzwBZgM8AWYDPAFkAx0BKRgAJP8DPAFmBAADZgHdIP8QAAM5AV8I/wMLAQ4D
        XAG+A1IBoAQAA7kB+AMLAQ4DXAG+A1IBoQQAA7IB9wT/AysBQgwABAIDXQHHHP8DoAH1A10BxQO5AfgI
        /wPGAfoDBwEJHAADBwEJA2cB3gL9Av8C/QL/Av0C/wL9Av8C/QL/Av0C/wN2AegIAAN1AecDYAHSAxgB
        IAQAJP8DPAFmBAADXQHFHP8DcwHmEAADOQFfCP8DWQG2A4MB7QNSAaAEAAO5AfgDCwEOA1wBvgNSAaEE
        AAOyAfcE/wMrAUIIAAMwAUsDWwHAA80B+wj/A0wBjwO7AfkI/wNlAdoDFwEfAyUBNwMWAR4DXAHDCP8D
        bQHgA0YBfwMJAQsEAAMuAUYDTQGSAxIBFwMhAS8DdgHoAv0C/wL9Av8C/QL/Av0C/wL9Av8C/QL/Av0C
        /wL9Av8IAAL9Av8C/QL/Al0BXgHMBAAk/wM8AWYEAAMbASUDRwGBA0kBiANJAYgDSQGIA0kBiANJAYgD
        SQGGAycBOhAAAzkBXxD/A1MBpQMHAQkDuwH5A0ABbgNoAdwDUgGhBAADsgH3BP8DKwFCBAADDwEUA6AB
        9RD/AyMBMgMzAVADmQHzBP8DPgFqAz4BagPeAf0DLQFFAz8BbBD/A00BkQQAA08BmQL9Av8DIwEzAzwB
        ZQL9Av8C/QL/Av0C/wL9Av8DVQGsA2cB3gL9Av8C/QL/Av0C/wMjATMDIwEzAv0C/wL9Av8C/QL/BAAk
        /wM8AWY4AAMTARoDJQQ3AVoDVwG1A84B/AOSAfEDYwHVDP8DUgGhBAADsgH3BP8DKwFCBAADKgE/FP8D
        awHhAx0BKQMzAVADuwH5A1EBngMcAScDUQGcAxYBHQNLAYsQ/wNXAbIEAANPAZkC/QL/AyMBMwM8AWYC
        /QL/Av0C/wL9Av8C/QL/A08BmQMTARoDhQHuAv0C/wL9Av8C/QL/Av0C/wL9Av8C/QL/Av0C/wQAJP8D
        PAFmBAADPAFkA10BxwNeAcwDXgHMA14BzANeAcwDXgHMA18BywNHAYIMAAMMARADMAFLAzwBZAMxAU4D
        EgEYAzIBTwNnAd4Q/wNWAasDDgESA8YB+gT/AysBQgQABAIDZwHfFP8DawHhAyABLgM3AVoDxgH6A0IB
        dAMqAT8DQQFxA5wB9BD/Az4BagQAA08BmQL9Av8C/QL/Av0C/wL9Av8C/QL/A2MB1wMJAQsIAANVAa8C
        /QL/Av0C/wL9Av8C/QL/Av0C/wL9Av8C/QL/BAAk/wM8AWYEAANiAdkc/wPGAfoIAAMWAR0DcwHmDP8D
        fgHsAxsBJQMpAT4g/wMrAUIIAANMAY4Y/wOgAfUDGwElAykBPQPGAfoY/wODAe0DAwEEBAADTwGZAv0C
        /wL9Av8C/QL/Av0C/wL9Av8DnAH0Ax4BKgM8AWYC/QL/Av0C/wL9Av8C/QL/Av0C/wL9Av8C/QL/Av0C
        /wL9Av8EAANaAcIg/wMrAUEEAANmAd0g/wQAAwwBEANkAdYU/wNsAeIDFgEeA1UBrBz/AysBQggAA1UB
        rRD/A84B/ANhAc8DaAHcA2UB2gMbASUDNwFaA7sB+RT/A7kB+AMcAScEAANPAZkC/QL/AyMBMwM8AWYC
        /QL/Av0C/wL9Av8DYQHPA0QBewL9Av8C/QL/Av0C/wL9Av8C/QL/Av0C/wL9Av8C/QL/Av0C/wQAAwUB
        BgNDAXYDSQGIA0kBiANJAYgDSQGIA0kBiANJAYYDMAFKCAADZgHdIP8EAAM6AWEM/wOyAfcDdAHlA20B
        5ANtAeQDPAFmAx4BKxz/AysBQgQAAwwBDwOgAfUQ/wM7AWIDDwETAwkBCwNOAZUDoAH1AyABLgMzAVAD
        mQHzFP8DTAGQBAADTQGSAtwB3gH9AyIBMQM8AWYC/QL/Av0C/wL9Av8C/QL/Av0C/wL9Av8C/QL/Av0C
        /wL9Av8IAAL9Av8C/QL/A80B+zAAA2YB3SD/BAADSgGJCP8DmQHzAyMBMgMTARkDEgEYAxIBGAMKAQ0E
        AgPNAfsY/wMrAUIEAAMtAUQQ/wPNAfsDEgEYA2YB3QNWAasDIAEuBP8DawHhAx0BKQMzAVADuwH5EP8D
        VwG0BAADEgEYAyIBMQMGAQgDOQFdAv0C/wL9Av8C/QL/Av0C/wL9Av8C/QL/Av0C/wL9Av8DfgHsCAAC
        /QL/Av0C/wNVAa8EAAMtAUQDXAG+A14BzANeAcwDXgHMA14BzANeAcwDXwHLA1EBnAMOARIEAANmAd0g
        /wQAA0IBcgj/A2QB1AQAA0wBjgNYAbgDWAG4AzcBWgMTARkE/wOgAfUDPQFoAwkBCxQAAwQBBQNcAcMM
        /wPpAf4DFAEbA1UBrQNGAX4DJwE5CP8DawHhAyMBMgNMAY4M/wN3AeoDNgFZEAADDgESA0oBiQNPAZkD
        TwGZA38B6wL9Av8DTwGZA08BmQNOAZYDKQE+CAADSwGLA0YBfgMPARMEAAOcAfQg/wM5AV8EAANmAd0g
        /wQAAxYBHQPeAf0E/wNgAdMEAANdAcUI/wMhAS8DRwGCBP8DYwHVAwcBCQNhAdAI/wOZAfMDHAEnDAAD
        OgFgA6AB9Qj/A0sBjAQAAwYBBwNaAb8c/wNYAbMDCwEOJAACXQFeAcwC/QL/KAAk/wM8AWYEAANmAd0g
        /wgAAzMBUQOJAfADYAHTBAADXQHFA5wB9AM7AWIDHAEnA7IB9wT/A2EB0AMDAQQDnAH0BP8DxgH6Az0B
        ZwMCAQMMAAQBA1cBsgz/A4UB7gOgAfUc/wN/AesDAwEEHAADdQHnAv0C/wL9Av8C/QL/Av0C/wL9Av8C
        /QL/AsQBxgH6AyABLhgAJP8DPAFmBAADZgHdIP8MAAMaASMDQwF2BAADQgFyAyABLQMTARoDWgG9CP8D
        YQHQAwMBBAOcAfQE/wNEAXgYAANDAXYw/wNcAb4gAANRAZ4CXQFeAcwCXQFeAcwCXQFeAcwCXQFeAcwC
        XQFeAcwCXQFeAcwDWgHCAxcBHxgAJP8DPAFmBAADZgHdIP8UAAQCAxsBJQNHAYADbgHjDP8DYQHQAwMB
        BAOcAfQDSwGKAwYBBxgAAxEBFgNtAeQs/wM7AWNcAAN2Aegg/wM2AVgEAANkAdQc/wOnAfYUAAMvAUkD
        TQGSA08BmQNPAZkDTwGZA08BmQNPAZkDRgF9BAIDOQFeJAADEQEWAysBQQMbASUDGQEiA1wBwwj/A3cB
        6gM2AVkDEwEaAyUBNwMjATIEAVwAAx4BKwN2AegU/wPeAf0DVwGxAwMBBAQAAzsBYwOnAfYU/wPeAf0D
        SwGKcAAEAgNUAakDdQHnAyQBNXAAAUIBTQE+BwABPgMAASgDAAFQAwABKAMAAQEBAAEBBQAB4AEBFgAD
        /wEAAYABAAF8AQABAwL/AfAGAAF8AQABAQGAAQ8B8AYAAXwBAAEBAYABDwHwBgABfAEAAQEBgAEDAfAG
        AAF8AQABAQGPAeEB8AYAAXwBAAEBAY8B4AHwBgABfAEAAQEBgAEAAXAGAAF8AQABAQGAAQABEAQAAYAB
        AAF8AQABAQGAAQQFAALBAfwBAAEBAYEB/wUAAcABAQH8AQABAQGBAf4FAAHwAQcB/AEAAQEBgAEAARAE
        AAHwAQcB/AEAAQEBgAEAATAEAAHgAQMB/AEAAQEBiAEAAXAEAAHgAQMB/AEAAX8BjwHhAfAEAAHgAQMB
        /AEAAQMBjwHhAfAEAAHgAQMB/AEAAQcBgAEPAfAEAAHwAQMB/AEAAQcBgAEPAfAEAAHwAQcB/AEAAR8B
        wAEfAfAEAAH8AR8B/AEAAT8C/wHwBQABIAEPA/8BBwP/AwABIAEPAQABAQHgAQABfwL/AwABIAEPAQAB
        AQHgAQABfwL/AwABIAEPAQABAQHgAQABfwHAAT8DAAEgAQ8BAgERAcABAAE/AYABMQMAASABDwECAREB
        gAEAAQgBAAExAwABIAEPAQABEQIAAQgBAAEBAwABPwH/AQABEQIAAQgBAAEBAwABIAEOAQABAQIAAQgB
        BgEBAwABIAEMAQABAQGAAQABCAEAAQEDAAEgAQgBAAEBAYABAAEIAQABAQMAAWABCAEAAQECAAEIAQAB
        MQIAAf8B4AEIAQABAQIAAQgBAAExAwABIAEIAUABHwIAAQ8BAAExAwABIAEIAUABAQHBAQABHwHzAf8D
        AAEgAQwBQAEBAcABAAE/AYABPwMAASABDgFAAQcB4AEAAX8BgAE/AwABIAEPAYABBwHgAQABfwL/AwAB
        IAEPAYABHwHwAQABfwL/AwABIAEPA/8BDwP/AgAL
</value>
  </data>
</root>